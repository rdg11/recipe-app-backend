"""Fix users table column names

Revision ID: e4ab9cb169ec
Revises: 36c3b8a7c333
Create Date: 2025-02-13 11:29:23.029765

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'e4ab9cb169ec'
down_revision = '36c3b8a7c333'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('ingredient', schema=None) as batch_op:
        batch_op.add_column(sa.Column('contains_nuts', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('contains_gluten', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('contains_meat', sa.Boolean(), nullable=True))
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.drop_index('name')
        batch_op.drop_column('containsGluten')
        batch_op.drop_column('containsMeat')
        batch_op.drop_column('containsNuts')

    with op.batch_alter_table('pantry_ingredient', schema=None) as batch_op:
        batch_op.alter_column('quantity',
               existing_type=mysql.DECIMAL(precision=10, scale=2),
               nullable=True,
               existing_server_default=sa.text("'0.00'"))
        batch_op.alter_column('unit',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
        batch_op.drop_constraint('pantry_ingredient_ibfk_2', type_='foreignkey')
        batch_op.drop_constraint('pantry_ingredient_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'ingredient', ['ingredient_id'], ['ingredient_id'])
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'])

    with op.batch_alter_table('recipe', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.drop_index('idx_dietary_flags')

    with op.batch_alter_table('recipe_ingredient', schema=None) as batch_op:
        batch_op.drop_constraint('recipe_ingredient_ibfk_2', type_='foreignkey')
        batch_op.drop_constraint('recipe_ingredient_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'recipe', ['recipe_id'], ['recipe_id'])
        batch_op.create_foreign_key(None, 'ingredient', ['ingredient_id'], ['ingredient_id'])

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.drop_constraint('reviews_ibfk_1', type_='foreignkey')
        batch_op.drop_constraint('reviews_ibfk_2', type_='foreignkey')
        batch_op.create_foreign_key(None, 'recipe', ['recipe_id'], ['recipe_id'])
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'])

    with op.batch_alter_table('user_favorite_recipes', schema=None) as batch_op:
        batch_op.drop_constraint('user_favorite_recipes_ibfk_2', type_='foreignkey')
        batch_op.drop_constraint('user_favorite_recipes_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'recipe', ['recipe_id'], ['recipe_id'])
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_vegetarian', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_nut_free', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_gluten_free', sa.Boolean(), nullable=True))
        batch_op.alter_column('first_name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('last_name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.drop_index('email')
        batch_op.drop_column('isVegetarian')
        batch_op.drop_column('isNutFree')
        batch_op.drop_column('isGlutenFree')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('isGlutenFree', mysql.TINYINT(display_width=1), server_default=sa.text("'0'"), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('isNutFree', mysql.TINYINT(display_width=1), server_default=sa.text("'0'"), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('isVegetarian', mysql.TINYINT(display_width=1), server_default=sa.text("'0'"), autoincrement=False, nullable=False))
        batch_op.create_index('email', ['email'], unique=True)
        batch_op.alter_column('email',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('last_name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('first_name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.drop_column('is_gluten_free')
        batch_op.drop_column('is_nut_free')
        batch_op.drop_column('is_vegetarian')

    with op.batch_alter_table('user_favorite_recipes', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('user_favorite_recipes_ibfk_1', 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
        batch_op.create_foreign_key('user_favorite_recipes_ibfk_2', 'recipe', ['recipe_id'], ['recipe_id'], ondelete='CASCADE')

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('reviews_ibfk_2', 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
        batch_op.create_foreign_key('reviews_ibfk_1', 'recipe', ['recipe_id'], ['recipe_id'], ondelete='CASCADE')

    with op.batch_alter_table('recipe_ingredient', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('recipe_ingredient_ibfk_1', 'recipe', ['recipe_id'], ['recipe_id'], ondelete='CASCADE')
        batch_op.create_foreign_key('recipe_ingredient_ibfk_2', 'ingredient', ['ingredient_id'], ['ingredient_id'], ondelete='CASCADE')

    with op.batch_alter_table('recipe', schema=None) as batch_op:
        batch_op.create_index('idx_dietary_flags', ['is_vegan', 'is_gluten_free', 'is_nut_free'], unique=False)
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)

    with op.batch_alter_table('pantry_ingredient', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('pantry_ingredient_ibfk_1', 'ingredient', ['ingredient_id'], ['ingredient_id'], ondelete='CASCADE')
        batch_op.create_foreign_key('pantry_ingredient_ibfk_2', 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
        batch_op.alter_column('unit',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('quantity',
               existing_type=mysql.DECIMAL(precision=10, scale=2),
               nullable=False,
               existing_server_default=sa.text("'0.00'"))

    with op.batch_alter_table('ingredient', schema=None) as batch_op:
        batch_op.add_column(sa.Column('containsNuts', mysql.TINYINT(display_width=1), server_default=sa.text("'0'"), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('containsMeat', mysql.TINYINT(display_width=1), server_default=sa.text("'0'"), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('containsGluten', mysql.TINYINT(display_width=1), server_default=sa.text("'0'"), autoincrement=False, nullable=False))
        batch_op.create_index('name', ['name'], unique=True)
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.drop_column('contains_meat')
        batch_op.drop_column('contains_gluten')
        batch_op.drop_column('contains_nuts')

    # ### end Alembic commands ###
